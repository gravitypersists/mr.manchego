{"version":3,"file":"component---src-pages-using-typescript-tsx-c855a3ba0b1263d5dbcd.js","mappings":"kKAyBA,UAZwD,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACtD,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,qBACX,oEACA,qEAA4C,sCAA5C,+DAAyH,yCAAzH,wEACA,qEAA4C,wCAA5C,oBAAgF,wCAAhF,gBAAgH,uCAAhH,UACA,2DAAkCD,EAAlC,wBAA6DD,EAAKG,KAAKC,UAAvE,KACA,4DAAmC,qBAAGC,KAAK,6CAAR,kCAAnC,KACA,gBAAC,EAAAC,KAAD,CAAMC,GAAG,KAAT,8B,mCCYJ,IA5Be,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MACvD,OACE,uBACEA,MAAK,eACHF,gBAAAA,EACAC,WAAAA,EACAE,OAAQ,OACRC,SAAU,QACPF,IAGL,uBACEA,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,4BAAOR","sources":["webpack://mr.manchego/./src/pages/using-typescript.tsx","webpack://mr.manchego/./src/components/layout.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\n  <Layout>\n    <SEO title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.</p>\n    <p>For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a <em>.tsconfig</em> file.</p>\n    <p>You're currently on the page \"{path}\" which was built on {data.site.buildTime}.</p>\n    <p>To learn more, head over to our <a href=\"https://www.gatsbyjs.org/docs/typescript/\">documentation about TypeScript</a>.</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"semantic-ui-css/semantic.min.css\"\nimport \"./layout.css\"\n\nconst Layout = ({ children, backgroundColor, fontFamily, style }) => {\n  return (\n    <div\n      style={{\n        backgroundColor,\n        fontFamily,\n        height: \"100%\",\n        overflow: \"auto\",\n        ...style\n      }}\n    >\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"names":["data","path","title","site","buildTime","href","Link","to","children","backgroundColor","fontFamily","style","height","overflow","margin","maxWidth","padding"],"sourceRoot":""}