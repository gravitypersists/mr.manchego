{"version":3,"sources":["webpack:///./src/pages/diner-fried-egg.js"],"names":["colors","primary","secondary","black","recipeJSON","ingredients","display","instructions","short","description","img","src","gif2","DinerFriedEggPage","query","model","over","lensProp","map","step","i","queryImage","assoc","fluid","childImageSharp","backgroundColor","fontFamily","title","to","heroImg","hero"],"mappings":"uQASMA,EAAS,CACbC,QAAS,UACTC,UAAW,UACXC,MAAO,WAGHC,EAAa,CACjBC,YAAa,CAAC,CAAEC,QAAS,UACzBC,aAAc,CACZ,CACEC,MAAO,YACPC,YAAa,qDACbC,IAAK,yBAAKC,IAAKC,OAEjB,CACEJ,MAAO,WACPC,YAAa,2DACbC,IAAK,yBAAKC,IAAKC,OAEjB,CACEJ,MAAO,UACPC,YAAa,wDACbC,IAAK,yBAAKC,IAAKC,OAEjB,CACEJ,MAAO,WACPC,YAAa,gDACbC,IAAK,yBAAKC,IAAKC,OAEjB,CACEJ,MAAO,aACPC,YAAa,gCACbC,IAAK,yBAAKC,IAAKC,SAqDNC,UAhDW,WAIxB,IAAMC,EAAK,OA6BLC,EAAQC,YAAKC,YAAS,iBAPV,SAAAV,GAAY,OAC5BA,EAAaW,KAAI,SAACC,EAAMC,GACtB,IAAMC,EAAaP,EAAM,YAAYM,GACrC,OAAOC,EACHC,YAAM,MAAO,kBAAC,IAAD,CAAKC,MAAOF,EAAWG,gBAAgBD,QAAWJ,GAC/DA,OAEgDf,GACxD,OACE,kBAAC,IAAD,CAAQqB,gBAAiBzB,EAAOC,QAASyB,WAAW,UAClD,kBAAC,IAAD,CAAKC,MAAM,0BACX,kBAAC,OAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CACED,MAAM,wBACNZ,MAAOA,EACPf,OAAQA,EACR6B,QAAS,kBAAC,IAAD,CAAKN,MAAOT,EAAMgB,KAAKN,gBAAgBD","file":"component---src-pages-diner-fried-egg-js-b011cd94f48c0cfcbb83.js","sourcesContent":["import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { assoc, lensProp, over } from \"ramda\"\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/Layout\"\nimport Recipe from \"../components/Recipe\"\nimport gif2 from \"../images/consistency.gif\"\n\nconst colors = {\n  primary: \"#5368FF\",\n  secondary: \"#676767\",\n  black: \"#000000\",\n}\n\nconst recipeJSON = {\n  ingredients: [{ display: \"1 egg\" }],\n  instructions: [\n    {\n      short: \"Crack Egg\",\n      description: \"Crack egg into bowl. Fetch any shell that gets in.\",\n      img: <img src={gif2} />,\n    },\n    {\n      short: \"Melt Fat\",\n      description: \"Over medium heat, melt fat (butter, olive oil) in a pan.\",\n      img: <img src={gif2} />,\n    },\n    {\n      short: \"Fry Egg\",\n      description: \"Dump egg into the pan and fry until desired doneness.\",\n      img: <img src={gif2} />,\n    },\n    {\n      short: \"Flip Egg\",\n      description: \"Flip the egg, and fry until desired doneness.\",\n      img: <img src={gif2} />,\n    },\n    {\n      short: \"Season Egg\",\n      description: \"Add salt, pepper, any spices.\",\n      img: <img src={gif2} />,\n    },\n  ],\n}\n\nconst DinerFriedEggPage = () => {\n  // Gatsby does not allow dynamic queries at runtime. Which means that if I want\n  // to extract a generic Recipe component that uses images, I need to build the\n  // queries for that image and feed those into the component. This is not ideal.\n  const query = useStaticQuery(graphql`\n    fragment itemImage on File {\n      childImageSharp {\n        fluid(maxWidth: 642) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    fragment fullPaneImage on File {\n      childImageSharp {\n        fluid(maxWidth: 1400) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    query {\n      hero: file(relativePath: { eq: \"overhead.png\" }) {\n        ...fullPaneImage\n      }\n    }\n  `)\n  // map images for each step in JSON for recipe\n  const addImages = instructions =>\n    instructions.map((step, i) => {\n      const queryImage = query[`imageStep${i}`]\n      return queryImage\n        ? assoc(\"img\", <Img fluid={queryImage.childImageSharp.fluid} />, step)\n        : step\n    })\n  const model = over(lensProp(\"instructions\"), addImages, recipeJSON)\n  return (\n    <Layout backgroundColor={colors.primary} fontFamily=\"Oswald\">\n      <SEO title=\"Diner Style Fried Egg\" />\n      <Link to=\"/\">Home</Link>\n      <Recipe\n        title=\"Diner Style Fried Egg\"\n        model={model}\n        colors={colors}\n        heroImg={<Img fluid={query.hero.childImageSharp.fluid} />}\n      />\n    </Layout>\n  )\n}\n\nexport default DinerFriedEggPage\n"],"sourceRoot":""}