{"version":3,"sources":["webpack:///./src/images/ricotta-spread.mp4","webpack:///./src/pages/ricotta-gnocchi.js","webpack:///./src/images/ricotta-form.mp4"],"names":["module","exports","colors","primary","secondary","black","recipeJSON","ingredients","display","tip","instructions","short","description","caution","img","width","autoPlay","muted","loop","src","vid1","type","gif2","vid3","RicottaGnocchiPage","query","model","over","lensProp","map","step","i","queryImage","assoc","fluid","childImageSharp","backgroundColor","fontFamily","title","to","heroImg","hero"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,8D,wPCWrCC,EAAS,CACbC,QAAS,UACTC,UAAW,UACXC,MAAO,WAGHC,EAAa,CACjBC,YAAa,CACX,CACEC,QAAS,iBACTC,IAAK,+DAEP,CACED,QAAS,kBAEX,CACEA,QAAS,eAEX,CACEA,QAAS,cAEX,CACEA,QAAS,kBAGbE,aAAc,CACZ,CACEC,MAAO,gBACPC,YACE,0EACFC,QAAS,8DACTC,IACE,2BAAOC,MAAO,IAAKC,UAAQ,EAACC,OAAK,EAACC,MAAI,GACpC,4BAAQC,IAAKC,IAAMC,KAAK,gBAI9B,CACEV,MAAO,kBACPC,YACE,2HACFE,IAAK,yBAAKK,IAAKG,OAEjB,CACEX,MAAO,eACPC,YACE,4KACFE,IACE,2BAAOC,MAAO,IAAKC,UAAQ,EAACC,OAAK,EAACC,MAAI,GACpC,4BAAQC,IAAKI,IAAMF,KAAK,gBAI9B,CACEV,MAAO,iBACPC,YACE,+IAEJ,CACED,MAAO,gBACPC,YAAa,uCAqDJY,UAhDY,WAIzB,IAAMC,EAAK,OA6BLC,EAAQC,YAAKC,YAAS,iBAPV,SAAAlB,GAAY,OAC5BA,EAAamB,KAAI,SAACC,EAAMC,GACtB,IAAMC,EAAaP,EAAM,YAAYM,GACrC,OAAOC,EACHC,YAAM,MAAO,kBAAC,IAAD,CAAKC,MAAOF,EAAWG,gBAAgBD,QAAWJ,GAC/DA,OAEgDxB,GACxD,OACE,kBAAC,IAAD,CAAQ8B,gBAAiBlC,EAAOC,QAASkC,WAAW,UAClD,kBAAC,IAAD,CAAKC,MAAM,oBACX,kBAAC,OAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CACED,MAAM,kBACNZ,MAAOA,EACPxB,OAAQA,EACRsC,QAAS,kBAAC,IAAD,CAAKN,MAAOT,EAAMgB,KAAKN,gBAAgBD,a,qBCtHxDlC,EAAOC,QAAU,IAA0B","file":"component---src-pages-ricotta-gnocchi-js-f20cbd846ece9dcb7efa.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/ricotta-spread-6415608f51c13ee2dbe6c521013366c3.mp4\";","import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { assoc, lensProp, over } from \"ramda\"\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/Layout\"\nimport Recipe from \"../components/Recipe\"\nimport gif2 from \"../images/consistency.gif\"\nimport vid1 from \"../images/ricotta-spread.mp4\"\nimport vid3 from \"../images/ricotta-form.mp4\"\n\nconst colors = {\n  primary: \"#FF5353\",\n  secondary: \"#676767\",\n  black: \"#000000\",\n}\n\nconst recipeJSON = {\n  ingredients: [\n    {\n      display: \"12 oz. ricotta\",\n      tip: \"make sure your Ricotta does not contain gums or stabilizers\",\n    },\n    {\n      display: \"1 oz. parmesan\",\n    },\n    {\n      display: \"1 whole egg\",\n    },\n    {\n      display: \"1 egg yolk\",\n    },\n    {\n      display: \"3.5 oz. flour\",\n    },\n  ],\n  instructions: [\n    {\n      short: \"Drain Ricotta\",\n      description:\n        \"Extract excess moisture from ricotta. Spread ricotta over paper towels.\",\n      caution: \"Be careful not to get pieces of paper towel in the ricotta.\",\n      img: (\n        <video width={321} autoPlay muted loop>\n          <source src={vid1} type=\"video/mp4\" />\n        </video>\n      ),\n    },\n    {\n      short: \"Mix Ingredients\",\n      description:\n        \"Mix ricotta, parmesan, flour, egg and egg yolk to even consistency with a spatula. Do not overmix. If needed, add flour.\",\n      img: <img src={gif2} />,\n    },\n    {\n      short: \"Form Gnocchi\",\n      description:\n        \"With heavily floured surfaces, form the mix into gnocchi.\\n\\ni. Divide into equal sizes.\\nii. Roll into logs\\niii. Cut logs into gnocchi\\niv. Sprinkle gnocchi with flour\",\n      img: (\n        <video width={321} autoPlay muted loop>\n          <source src={vid3} type=\"video/mp4\" />\n        </video>\n      ),\n    },\n    {\n      short: \"Blanch Gnocchi\",\n      description:\n        \"Blanch the gnocchi, they will rise to the surface when done. Transfer to ice bath to prevent overcooking. Drain, removing any leftover ice.\",\n    },\n    {\n      short: \"Combine Sauce\",\n      description: \"Mix gnocchi with sauce and serve.\",\n    },\n  ],\n}\n\nconst RicottaGnocchiPage = () => {\n  // Gatsby does not allow dynamic queries at runtime. Which means that if I want\n  // to extract a generic Recipe component that uses images, I need to build the\n  // queries for that image and feed those into the component. This is not ideal.\n  const query = useStaticQuery(graphql`\n    fragment itemImage on File {\n      childImageSharp {\n        fluid(maxWidth: 642) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    fragment fullPaneImage on File {\n      childImageSharp {\n        fluid(maxWidth: 1400) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    query {\n      hero: file(relativePath: { eq: \"overhead.png\" }) {\n        ...fullPaneImage\n      }\n    }\n  `)\n  // map images for each step in JSON for recipe\n  const addImages = instructions =>\n    instructions.map((step, i) => {\n      const queryImage = query[`imageStep${i}`]\n      return queryImage\n        ? assoc(\"img\", <Img fluid={queryImage.childImageSharp.fluid} />, step)\n        : step\n    })\n  const model = over(lensProp(\"instructions\"), addImages, recipeJSON)\n  return (\n    <Layout backgroundColor={colors.primary} fontFamily=\"Oswald\">\n      <SEO title=\"Ricotta Gnocchi\" />\n      <Link to=\"/\">Home</Link>\n      <Recipe\n        title=\"Ricotta Gnocchi\"\n        model={model}\n        colors={colors}\n        heroImg={<Img fluid={query.hero.childImageSharp.fluid} />}\n      />\n    </Layout>\n  )\n}\n\nexport default RicottaGnocchiPage\n","module.exports = __webpack_public_path__ + \"static/ricotta-form-03f0b0c4662f3272e122bcd943c968d5.mp4\";"],"sourceRoot":""}